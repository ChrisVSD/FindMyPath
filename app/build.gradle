plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    namespace 'com.example.findmypath'
    compileSdk 34

    defaultConfig {
        applicationId 'com.example.findmypath'
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName '1.0'
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            def keystorePropsFile = rootProject.file('app/keystore.properties')
            if (keystorePropsFile.exists()) {
                def keystoreProps = new Properties()
                keystoreProps.load(new FileInputStream(keystorePropsFile))
                storeFile file(keystoreProps['storeFile'])
                storePassword keystoreProps['storePassword']
                keyAlias keystoreProps['keyAlias']
                keyPassword keystoreProps['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = '17' }

    // Inject MAPS_API_KEY from local.properties if present
    def mapsKey = project.hasProperty('MAPS_API_KEY') ? project.MAPS_API_KEY : ''
    defaultConfig {
        manifestPlaceholders = [ MAPS_API_KEY: mapsKey ]
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'androidx.room:room-runtime:2.5.2'
    kapt 'androidx.room:room-compiler:2.5.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'
}

// Gradle task: copy logo from assets_to_import/logo.png to res/drawable/logo.png at preBuild
tasks.register('copyLogo') {
    doLast {
        def src = file("${rootDir}/assets_to_import/logo.png")
        if (src.exists()) {
            def destDir = file("${projectDir}/src/main/res/drawable")
            destDir.mkdirs()
            copy {
                from src
                into destDir
            }
            println "[copyLogo] logo copied to ${projectDir}/src/main/res/drawable/logo.png"
        } else {
            println "[copyLogo] no logo found at assets_to_import/logo.png â€” skipping""
        }
    }
}
preBuild.dependsOn copyLogo
